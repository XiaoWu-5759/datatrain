# 掌握表示、清洗、统计、和展示数据的能力

# ipython 是一个交互式的ide
# ipython有很多使用方法
# 变量，函数 通过在后面添加？
# 可以获取详细信息
#
# %run  ，py 可以在系统的任何目录下
# 如果文件和ipython在同一目录下，就直接写文件名
# 其他目录，可以使用绝对命令来查找
#
# 魔术命令：
# %magic  显示所有的魔术命令
# %hist ipython命令的输入历史
# %pdb  异常发生后自动进入调试器
# %reset  删除当前命名空间中的全部变量或名称
# %who 显示ipython当前命名空间中已经定义的变量
# %time statement  给出代码的执行时间，statement表示一段代码
# %timeit statement  多次执行代码，计算综合平均执行时间
#
# 如果我们看idle 用户输入直接返回一个输出结果 python只是一个解释器 ipython是一个能调用核心python解释器交互式环境
# 能够显示很多图形图像的东西 gui ipython只是一个前台的显示脚本，核心的调用在python里面




# 卷积的结果
# 数据处理和科学计算中的所有领域

# Numpy 保存和读取数据的几种方法
# 数据： 一个数据表示一个含义
# 一组数据： 表达一个和多个含义
# 维度是一组数据的组织方式
# 表达数据含义
# 一维数据：
# 一维数据由对等关系的有序或者无序数据构成，采用线性方式组织
# 表示一维数据 可以使用对应的列表，数组（python中没有）和集合等概念
#
# 列表和数组
# 一组数据的有序结构
# 但是列表中不需要相同数据类型
#
# 二维数据：
# 二维数据有多个一维数据构成，是一维数据的组成形式
# 表格是典型的二维数据，其中，表头是二维数据的一部分
#
# 多维数据
# 多维数据由一维或二维数据在新的维度上展示
#
# 高维数据
# 高维数据仅利用最基本的二元关系展示数据间的复杂结构
# 没有数据规整的组织方式
# 但是却有数据之间的包含关系，并列关系，属性关系等 形成数据组织关系
# 键值对 组织起来的数据方式

# 使用python基本数据结构 可以展示数据维度
# 一维数据：列表和集合类型
# 二维数据：列表
# 多维数据：列表
# 高维数据：字典类型或数据表达格式
#
# 数据表达格式，组织数据，josn，xml，yaml

# numpy科学计算基础库
# 一个强大的n维数组对象ndarray
# 广播功能函数
# 整合c、c++、fortran代码的工具
# 线性代数，傅里叶变换，随机数生成等功能
# numpy是scipy，pandas等数据处理或科学计算库的基础

import numpy as np
# 为什么需要一个额外的数组类型呢
# 计算方面上的欠缺
# 并不是一个科学计算思想，应该不是对一个单一的数字
# 把一维数组直接当成一个数，直接用来运算
#
# numpy底层是用c来编写的
# N维数组对象：ndarray
# 数组对象可以去掉元素间运算所需的循环，使一维向量更像单个数据
# 设置专门的数组对象，经过优化，可以提升这类应用的运算速度
# 观察：在科学计算中，一个维度所有数据的类型往往是相同的，
# 数组对象采用相同的数据类型，有助于节省运算和节省空间
#
# 优点：简化代码，提高运算速度，节省空间
#
# ndarray是一个多维数组对象，由两部分构成：
# 1.实际的数据
# 2.描述这些数据的元数据（数据维度，数据类型等）
# ndarray数组一般要求所有元素类型相同，数组下标从0开始
#
# 生成一个ndarray数组
# np.array()输出成[]形式，元素由空格分割
# 两个基本概念
# 轴（axis）:保存数据的维度
# 秩（rank）：轴的数量
